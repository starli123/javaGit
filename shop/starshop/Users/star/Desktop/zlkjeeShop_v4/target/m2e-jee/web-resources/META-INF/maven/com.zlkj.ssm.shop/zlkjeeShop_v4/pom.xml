<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.zlkj.ssm.shop</groupId>
  <artifactId>zlkjeeShop_v4</artifactId>
  <packaging>war</packaging>
  <version>0.0.1-SNAPSHOT</version>
  <name>zlkjeeShop_v4</name>
  <url>http://maven.apache.org</url>
  
  <parent>
	    <groupId>org.springframework.boot</groupId>
	    <artifactId>spring-boot-starter-parent</artifactId>
	    <version>1.5.4.RELEASE</version>
  </parent>
  
  <properties>
    <!-- 指定Jdk版本以及源码版本 -->
    <maven.compiler.source>1.7</maven.compiler.source>
    <maven.compiler.target>1.7</maven.compiler.target>
    <!-- Spring Boot 启动入口 -->
    <springboot.start-class>com.zlkj.ssm.shop.core.config.ApplicationConfiguration</springboot.start-class>
    <!-- 指定系统模块版本 -->
    <!--
     spring 3.2.9版本的  要么使用 freemarker 2.3.16版本 
      spring 4.3.2. 版本的  要么使用 freemarker 2.3.25-incubating ，2.3.26-incubating版本 
    
     -->
	<shiro.version>1.2.3</shiro.version>
	<ehcache.version>2.4.4</ehcache.version>
	<fastjson.version>1.1.33</fastjson.version>
	<pinyin4j.version>2.5.1</pinyin4j.version>
	<druid.version>1.0.18</druid.version>
	 <httpclient.version>4.5</httpclient.version>
    <slf4j.version>1.7.7</slf4j.version>
    <gson.version>2.7</gson.version>
    <guava.version>19.0</guava.version>
    <commons-lang3.version>3.5</commons-lang3.version>
    <commons-io.version>2.5</commons-io.version>
    <commons-fileupload.version>1.3.2</commons-fileupload.version>
    <commons-codec.version>1.10</commons-codec.version>
    <commons-httpclient.version>3.0.1</commons-httpclient.version>
    <!-- 统一项目、源码 编码 -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>
  
  <dependencies>
  	<dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
  
	 <!-- slf4j start -->
  	<dependency>
		<groupId>org.slf4j</groupId>
		<artifactId>slf4j-api</artifactId>
	</dependency>
	<dependency>
		<groupId>org.slf4j</groupId>
		<artifactId>slf4j-log4j12</artifactId>
	</dependency>
	<dependency>
		<groupId>org.slf4j</groupId>
		<artifactId>jcl-over-slf4j</artifactId>
	</dependency>
	<dependency>
		<groupId>org.slf4j</groupId>
		<artifactId>jul-to-slf4j</artifactId>
	</dependency>
	<!-- slf4j end -->
	
	
	<!-- httpclient start -->
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpmime</artifactId>
    </dependency>
    <dependency>
	    <groupId>commons-httpclient</groupId>
	    <artifactId>commons-httpclient</artifactId>
	    <version>${commons-httpclient.version}</version>
	     <exclusions>
		    <exclusion>
		        <groupId>commons-logging</groupId>
	    		<artifactId>commons-logging</artifactId>
		    </exclusion>
	    </exclusions>
	</dependency>
    <!-- httpclient end -->
    
    <!-- apache common start -->
    <dependency>
      <groupId>commons-codec</groupId>
      <artifactId>commons-codec</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>${commons-io.version}</version>
    </dependency>
	<dependency>
	    <groupId>commons-fileupload</groupId>
	    <artifactId>commons-fileupload</artifactId>
	    <version>${commons-fileupload.version}</version>
	</dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>${commons-lang3.version}</version>
    </dependency>
    <dependency>
	    <groupId>commons-beanutils</groupId>
	    <artifactId>commons-beanutils</artifactId>
	</dependency>
     <!-- common end -->
     
     <!-- google start -->
    <dependency>
      <groupId>com.google.code.gson</groupId>
      <artifactId>gson</artifactId>
    </dependency>
     <dependency>
       <groupId>com.google.guava</groupId>
       <artifactId>guava</artifactId>
       <version>${guava.version}</version>
     </dependency>
     <!-- google end -->
      

	<!-- json start -->
  	<dependency>
		<groupId>com.fasterxml.jackson.core</groupId>
		<artifactId>jackson-databind</artifactId>
	</dependency>
	<dependency>
		<groupId>com.fasterxml.jackson.core</groupId>
		<artifactId>jackson-annotations</artifactId>
	</dependency> 
	<dependency>
		    <groupId>com.alibaba</groupId>
		    <artifactId>fastjson</artifactId>
		    <version>${fastjson.version}</version>
	</dependency>
	<!-- json end -->
	
	<!-- spring Boot start-->
	<dependency>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-web</artifactId>
		<exclusions>
			<exclusion>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-logging</artifactId>
			</exclusion>
		</exclusions>
	</dependency>
	
	<dependency>
	    <groupId>org.springframework.boot</groupId>
	    <artifactId>spring-boot-starter-data-redis</artifactId>
	    <exclusions>
			<exclusion>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-logging</artifactId>
			</exclusion>
		</exclusions>
	</dependency>
	
	<dependency>
	    <groupId>org.springframework.boot</groupId>
	    <artifactId>spring-boot-starter-freemarker</artifactId>
	</dependency>
	
   <dependency>
    <groupId>org.mybatis.spring.boot</groupId>
    <artifactId>mybatis-spring-boot-starter</artifactId>
    <version>1.3.0</version>
    	<exclusions>
			<exclusion>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-logging</artifactId>
			</exclusion>
		</exclusions>
	</dependency>
	
	 <dependency>
		  <groupId>org.springframework.boot</groupId>
		  <artifactId>spring-boot-devtools</artifactId>
		  <scope>true</scope>
		  <optional>true</optional>
	  </dependency>
		
   	<!-- spring Boot end -->
   	
   	 <!-- Spring  start -->
    <dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-orm</artifactId>
	</dependency>
   	
	<dependency>
		<groupId>org.aspectj</groupId>
		<artifactId>aspectjrt</artifactId>
	</dependency>
	<dependency>
		<groupId>org.aspectj</groupId>
		<artifactId>aspectjweaver</artifactId>
	</dependency>
	<dependency>
	    <groupId>cglib</groupId>
	    <artifactId>cglib-nodep</artifactId>
	    <version>3.2.4</version>
	</dependency>
	<!-- spring end -->
		
	<!-- shiro  start -->
	<dependency>
		<groupId>org.apache.shiro</groupId>
		<artifactId>shiro-core</artifactId>
		<version>${shiro.version}</version>
	</dependency>
	<dependency>
		<groupId>org.apache.shiro</groupId>
		<artifactId>shiro-spring</artifactId>
		<version>${shiro.version}</version>
	</dependency>
	<dependency>
		<groupId>org.apache.shiro</groupId>
		<artifactId>shiro-cas</artifactId>
		<version>${shiro.version}</version>
		<exclusions>
			<exclusion>
				<groupId>commons-logging</groupId>
				<artifactId>commons-logging</artifactId>
			</exclusion>
		</exclusions>
	</dependency>
	<dependency>
		<groupId>org.apache.shiro</groupId>
		<artifactId>shiro-web</artifactId>
		<version>${shiro.version}</version>
	</dependency>
	<dependency>
		<groupId>org.apache.shiro</groupId>
		<artifactId>shiro-ehcache</artifactId>
		<version>${shiro.version}</version>
		<exclusions>
		<exclusion>
			<groupId>net.sf.ehcache</groupId>
			<artifactId>ehcache-core</artifactId>
		</exclusion>
		</exclusions>
	</dependency>
	<dependency>
	    <groupId>org.apache.shiro</groupId>
	    <artifactId>shiro-quartz</artifactId>
	    <version>${shiro.version}</version>
	</dependency>
	<!-- shiro  end -->
	
	<!-- db  operator start -->
	<dependency>
	     <groupId>com.alibaba</groupId>
	     <artifactId>druid</artifactId>
	     <version>${druid.version}</version>
	</dependency>
	<dependency>
		<groupId>mysql</groupId>
		<artifactId>mysql-connector-java</artifactId>
	</dependency>
	<!-- db  operator end -->
	
	<!-- cache  start -->
    <dependency>
		<groupId>net.sf.ehcache</groupId>
		<artifactId>ehcache-core</artifactId>
		<version>${ehcache.version}</version>
	</dependency>
    <!-- cache start -->
	
	<!-- servlet start -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<scope>provided</scope>
		</dependency> 
		<dependency>
		  <groupId>jstl</groupId>
		  <artifactId>jstl</artifactId>
		  <version>1.2</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<version>2.2</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
		  <groupId>jsptags</groupId>
		  <artifactId>pager-taglib</artifactId>
		  <version>2.0</version>
		</dependency>
	<!-- servlet end -->
	
	<!-- other start -->
    
    <dependency>
      <groupId>com.thoughtworks.xstream</groupId>
      <artifactId>xstream</artifactId>
      <version>1.4.7</version>
    </dependency>
    
    <dependency>
	    <groupId>dom4j</groupId>
	    <artifactId>dom4j</artifactId>
	</dependency>
	
	<dependency>
	    <groupId>com.aliyun.oss</groupId>
	    <artifactId>aliyun-sdk-oss</artifactId>
	    <version>2.6.0</version>
	     <exclusions>
		    <exclusion>
		        <groupId>commons-logging</groupId>
	    		<artifactId>commons-logging</artifactId>
		    </exclusion>
	    </exclusions>
	</dependency>
	<dependency>
	    <groupId>p6spy</groupId>
	    <artifactId>p6spy</artifactId>
	    <version>1.3</version>
	</dependency>
    <dependency>
	    <groupId>com.belerweb</groupId>
	    <artifactId>pinyin4j</artifactId>
	    <version>${pinyin4j.version}</version>
	</dependency>
	
	<dependency>
	    <groupId>org.tuckey</groupId>
	    <artifactId>urlrewritefilter</artifactId>
	    <version>4.0.4</version>
	</dependency>
  </dependencies>
  
	  
	<distributionManagement>
  	  <repository>
		  <id>nexus-releases</id>
		  <name>Nexus Release Repository</name>
		  <url>http://192.168.0.200:8081/nexus/content/repositories/releases/</url>
	  </repository>
	  <snapshotRepository>
		  <id>nexus-snapshots</id>
		  <name>Nexus Snapshots Repository</name>
		  <url>http://192.168.0.200:8081/nexus/content/repositories/snapshots/</url>
	  </snapshotRepository>
	</distributionManagement>
  
  
  <build>
    <finalName>zlkjeeShop_v4</finalName>
    <resources>
		<resource>
			<directory>src/main/java</directory>
			<includes>
				<include>**/*.properties</include>
				<include>**/*.xml</include>
			</includes>
			<filtering>true</filtering>
		</resource>
		
		<resource>
			<directory>src/main/resources</directory>
			<includes>
				<include>**/*.properties</include>
				<include>**/*.xml</include>
				<include>**/*.yml</include>
			</includes>
			<filtering>true</filtering>
		</resource>
	  </resources>
	  
    <plugins>
     <!-- 执行类加载器中运行JUnit单元测试 -->
       <plugin>
         <groupId>org.apache.maven.plugins</groupId>
         <artifactId>maven-surefire-plugin</artifactId>
         <configuration>
           <!-- includes  里面可以指定可被执行的Junit单元测试类 -->
	         <!-- 
	         	  <includes>
	         		<includes>**/ApiTest* </includes>
	         	  </includes> 
	         -->
		<!-- excludes用于屏蔽那些不需要Junit测试的类 -->
         <!-- 
		          <excludes>
		          	<excludes>**/ApiTest* </excludes>
		          </excludes> 
         -->
		<!--  skip :true 跳过测试 false:执行单元测试 默认为false -->
           <skip>true</skip>
         </configuration>
       </plugin>
        
      <!-- maven 私有仓库nexus插件 下载地址:https://www.sonatype.com/download-oss-sonatype-->
      <plugin>
	        <groupId>org.sonatype.plugins</groupId>
	        <artifactId>nexus-staging-maven-plugin</artifactId>
	        <version>1.6.3</version>
	        <extensions>true</extensions>
	        <configuration>
	          <serverId>ossrh</serverId>
	          <nexusUrl>http://192.168.0.200:8081/nexus/</nexusUrl>
	          <autoReleaseAfterClose>false</autoReleaseAfterClose>
	        </configuration>
      </plugin>
      
      <!-- 
      spring-boot-devtools插件  实现热部署机制
      	spring boot热部署机制 ：
     	 	运行ApplicationConfig.java中的main方法
     	 		1】修改方法的返回值
     	 		2】在一个类中重新创建一个方法
     	 		3】新建一个类 或者controller   都可以实现不停机的情况下 进行自动restart
     	 		强调：加上spring-boot-devtools依赖
       -->
       
       
      <plugin>
      	<groupId>org.springframework.boot</groupId>
	    <artifactId>spring-boot-maven-plugin</artifactId>
	    <configuration>
	 	<mainClass>${springboot.start-class}</mainClass>
	    <!-- 如何没有该项 fork:true配置 即 spring-boot-devtools不起作用-->
	    <fork>true</fork>
       <!-- 加入这个插件  除了 @SpringBootApplication注释的类用main方法 其他所有的类中严谨使用main方法  用完必须屏蔽掉 -->
	     <maimClass>com.zlkj.ssm.shop.core.config.ApplicationConfiguration</maimClass>
	    </configuration>
	    <executions>
               <execution>
                   <goals>
                       <goal>repackage</goal>
                   </goals>
               </execution>
           </executions>
      </plugin>
      
     <plugin>
       <groupId>org.apache.maven.plugins</groupId>
       <artifactId>maven-compiler-plugin</artifactId>
       <configuration>
         <encoding>UTF-8</encoding>
          	 <!-- 在此处设置 skip为true 等于设置了把所有的测试类编译都跳过 即使测试类编译不通过 也不会报错 所以一般不使用-->
		 	 <!--    <skip>true</skip> -->
		 	 <!-- Jdk 7解决 ImageUtils.java:[23,32] 程序包com.sun.image.codec.jpeg不存在问题 -->
			<compilerArguments>
				<verbose />
				<bootclasspath>${java.home}/lib/rt.jar;${java.home}/lib/jce.jar</bootclasspath>
			</compilerArguments>
       </configuration>
     </plugin>
    </plugins>
    
  </build>
</project>
