package com.zlkj.ssm.shop.web.controller.manage;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Controller;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RequestMethod;import org.springframework.web.servlet.mvc.support.RedirectAttributes;import com.zlkj.ssm.shop.core.cache.FrontCache;import com.zlkj.ssm.shop.core.page.PagerModel;import com.zlkj.ssm.shop.manage.entity.Keyvalue;import com.zlkj.ssm.shop.manage.service.AdminKeyvalueService;import com.zlkj.ssm.shop.web.controller.BaseController;import javax.servlet.http.HttpServletRequest;/** * 键值对管理 */@Controller@RequestMapping("/manage/keyvalue/")public class AdminKeyvalueController extends BaseController<Keyvalue> {	@Autowired	private AdminKeyvalueService keyvalueService;	@Autowired	private FrontCache frontCache;	private static final String page_toList = "/manage/keyvalue/keyvalueList";	private static final String page_toAdd = "/manage/keyvalue/keyvalueEdit";	private static final String page_toEdit = "/manage/keyvalue/keyvalueEdit";	AdminKeyvalueController() {		super.page_toList = page_toList;// not support		super.page_toAdd = page_toAdd;// not support		super.page_toEdit = page_toEdit;	}	public FrontCache getFrontCache() {		return frontCache;	}	public void setFrontCache(FrontCache frontCache) {		this.frontCache = frontCache;	}	@Override	public AdminKeyvalueService getService() {		return keyvalueService;	}	@Override	protected void selectListAfter(PagerModel pager) {		pager.setPagerUrl("selectList");	}	public void setKeyvalueService(AdminKeyvalueService keyvalueService) {		this.keyvalueService = keyvalueService;	}	@Override	public void insertAfter(Keyvalue e) {		e.clear();	}	@Override	@RequestMapping(value = "insert", method = RequestMethod.POST)	public String insert(HttpServletRequest request, Keyvalue e,			RedirectAttributes flushAttrs) throws Exception {		super.insert(request, e, flushAttrs);		// KeyValueHelper.load(getPager().getList());		frontCache.loadKeyValue();		// return selectList();		return "redirect:selectList";	}	@Override	@RequestMapping(value = "update", method = RequestMethod.POST)	public String update(HttpServletRequest request, Keyvalue e,			RedirectAttributes flushAttrs) throws Exception {		super.update(request, e, flushAttrs);		// KeyValueHelper.load(getPager().getList());		frontCache.loadKeyValue();		return "redirect:selectList";	}}