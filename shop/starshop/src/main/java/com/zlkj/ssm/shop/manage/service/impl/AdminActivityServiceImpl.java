package com.zlkj.ssm.shop.manage.service.impl;import java.util.LinkedList;import org.apache.commons.lang.StringUtils;import org.springframework.stereotype.Service;import org.springframework.transaction.annotation.Transactional;import com.zlkj.ssm.shop.core.ServersManager;import com.zlkj.ssm.shop.manage.dao.AdminActivityDao;import com.zlkj.ssm.shop.manage.entity.Activity;import com.zlkj.ssm.shop.manage.entity.Product;import com.zlkj.ssm.shop.manage.service.AdminActivityService;import com.zlkj.ssm.shop.manage.service.AdminProductService;import javax.annotation.Resource;@Transactional@Servicepublic class AdminActivityServiceImpl extends ServersManager<Activity, AdminActivityDao> implements		AdminActivityService {    @Resource    @Override    public void setDao(AdminActivityDao activityDao) {        this.dao = activityDao;    }    @Resource	private AdminProductService productService;		public AdminProductService getProductService() {		return productService;	}	public void setProductService(AdminProductService productService) {		this.productService = productService;	}	/**	 * 新增活动	 */	@Override	public int insert(Activity e) {		if(StringUtils.isBlank(e.getProductID())){			throw new NullPointerException("参与活动的商品ID不能为空！");		}				int activityID = super.insert(e);				e.setId(String.valueOf(activityID));				updateProductBindActivityId(e);				return activityID;	}	/**	 * 修改活动	 */	@Override	public int update(Activity e) {		if(StringUtils.isBlank(e.getProductID())){			throw new NullPointerException("参与活动的商品ID不能为空！");		}		//将此活动原来绑定的商品去除，重新绑定一个商品		productService.updateResetThisProductActivityID(e.getId());		updateProductBindActivityId(e);				return super.update(e);	}		private void updateProductBindActivityId(Activity e) {		Product pro = new Product();		pro.setActivityID(e.getId());		if(pro.getProductIds()==null){			pro.setProductIds(new LinkedList<String>());		}				String[] productIDArr = e.getProductID().split("\\|");		for(int i=0;i<productIDArr.length;i++){			pro.getProductIds().add(productIDArr[i].trim());		}		productService.updateProductBindActivityId(pro);	}}