package com.zlkj.ssm.shop.web.controller.manage;import org.apache.commons.lang.StringUtils;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Controller;import org.springframework.web.bind.annotation.RequestMapping;import com.zlkj.ssm.shop.core.TaskManager;import com.zlkj.ssm.shop.core.page.PagerModel;import com.zlkj.ssm.shop.manage.entity.Task;import com.zlkj.ssm.shop.manage.service.AdminTaskService;import com.zlkj.ssm.shop.web.controller.BaseController;import com.zlkj.ssm.shop.web.tools.RequestHolder;import javax.servlet.http.HttpServletRequest;@Controller@RequestMapping("task")public class AdminTaskController extends BaseController<Task> {//	@Autowired	private AdminTaskService taskService;//	@Autowired	private TaskManager taskManager;	public void setTaskManager(TaskManager taskManager) {		this.taskManager = taskManager;	}	public AdminTaskService getService() {		return taskService;	}	public void insertAfter(Task e) {		e.clear();	}	@Override	protected void selectListAfter(PagerModel pager) {		super.selectListAfter(pager);		//获取每个任务的内存数据		if(pager.getList()!=null){			for(int i=0;i<pager.getList().size();i++){				Task item = (Task) pager.getList().get(i);				Task task = TaskManager.getTask(item.getCode());				if(task!=null){					item.setNextWorkTime(task.getNextWorkTime());					if(task.getThread()!=null){						item.setCurrentStatus(task.getThread().getState().name());					}else{						item.setCurrentStatus("已停止");					}				}			}		}	}	@Override	public String selectList(HttpServletRequest request, Task e) throws Exception {		return super.selectList(request, e);	}		/**	 * 立即执行一个任务	 * @return	 * @throws Exception 	 */	@RequestMapping("startTask")	public String startTask(Task e) throws Exception{		if(StringUtils.isBlank(e.getCode())){			throw new NullPointerException("任务代号不能为空！");		}		//		Task task = taskManager.getTask(e.getCode());//		if(task==null){//			throw new NullPointerException("系统中不存在此任务！");//		}		//		task.getThread().		return selectList(RequestHolder.getRequest(), e);	}	/**	 * 立即终止一个任务	 * @return	 * @throws Exception 	 */	@RequestMapping("stopTask")	public String stopTask(Task e) throws Exception{		if(StringUtils.isBlank(e.getCode())){			throw new NullPointerException("任务代号不能为空！");		}				return selectList(RequestHolder.getRequest(), e);	}}